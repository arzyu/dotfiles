set nocompatible
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" change language: set helplang=en
Plugin 'vimcn/vimcdoc'

Plugin 'honza/vim-snippets'
Plugin 'SirVer/ultisnips'

let g:UltiSnipsExpandTrigger = '<tab>'
let g:UltiSnipsJumpForwardTrigger = '<c-b>'
let g:UltiSnipsJumpBackwardTrigger = '<c-z>'

" :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit = 'vertical'


Plugin 'othree/html5.vim'


Plugin 'editorconfig/editorconfig-vim'
let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']


Plugin 'pangloss/vim-javascript'

Plugin 'mxw/vim-jsx'

Plugin 'burnettk/vim-angular'

Plugin 'hdima/python-syntax'
let python_highlight_all = 1


" syntax checker
Plugin 'scrooloose/syntastic'
let g:syntastic_check_on_open = 1

" javascript
let g:syntastic_javascript_checkers = ['eslint']

" scss
let g:syntastic_scss_checkers = []

" python
" need install flake8: `pip3 install flake8`
let g:syntastic_python_checkers = ['flake8']


Plugin 'mtscout6/syntastic-local-eslint.vim'


" Better file browser
Plugin 'scrooloose/nerdtree'
let NERDTreeMinimalUI = 1 " use minimal UI
let NERDTreeShowHidden = 1 " show hidden files
let NERDTreeChDirMode = 2 " change vim directory automatically
let NERDTreeAutoDeleteBuffer = 1
let NERDTreeCaseSensitiveSort = 1
let NERDTreeIgnore = ['\.swp$']
nnoremap <C-F9> :NERDTreeFind<CR>
nnoremap <F9> :NERDTreeToggle<CR>


" Code commenter
Plugin 'scrooloose/nerdcommenter'

" Surround
Plugin 'tpope/vim-surround'

" Zen coding
Plugin 'mattn/emmet-vim'
let g:user_emmet_settings = {
\  'html': {
\    'snippets': {
\      'html:5': '!!!+meta[charset=UTF-8]+title'
\    }
\  }
\ }


" Code and files fuzzy finder
Plugin 'kien/ctrlp.vim'
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlPBuffer'  " 默认在 buffers 中搜索
let g:ctrlp_regexp = 1  " 使用正则搜索文件, ctrl+r 切换
let g:ctrlp_by_filename = 1 " 只搜索文件名, ctrl+d 切换
let g:ctrlp_working_path_mode = 0
let g:ctrlp_show_hidden = 1
let g:ctrlp_custom_ignore = {
    \ 'dir': '\v[\/](\.(git|cache)|node_modules|build|dist)$',
    \ 'file': '\v\.(DS_Store|swp)$'
\ }


" Dart Language Syntax
Plugin 'dart-lang/dart-vim-plugin'

" git
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
let g:gitgutter_highlight_lines = 1
let g:gitgutter_override_sign_column_highlight = 0

Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
let g:airline_theme = 'simple'
let g:airline_left_sep = ''
let g:airline_right_sep = ''
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_symbols.branch = '↯'
let g:airline_symbols.linenr = '┼'


Plugin 'cakebaker/scss-syntax.vim'
autocmd BufRead,BufNewFile *.scss set filetype=scss.css


Plugin 'groenewege/vim-less'

Plugin 'ap/vim-css-color'

Plugin 'arzyu/vim-colors-celadonite'

Plugin 'easymotion/vim-easymotion'

Plugin 'jiangmiao/auto-pairs'

Plugin 'heavenshell/vim-jsdoc'
let g:jsdoc_default_mapping = 0

Plugin 'vim-scripts/CursorLineCurrentWindow'


" All of your Plugins must be added before the following line
call vundle#end()
filetype plugin indent on

colorscheme celadonite

